plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.debduttapanda.idealapp"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        testInstrumentationRunner = "com.debduttapanda.idealapp.CustomTestRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

    }

    flavorDimensions "data_source"
    productFlavors {
        local {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension "data_source"
            applicationIdSuffix ".local"
            versionNameSuffix "-local"
        }
        remote {
            dimension "data_source"
            applicationIdSuffix ".remote"
            versionNameSuffix "-remote"
        }
    }

    buildTypes {
        release {
            applicationIdSuffix ".release"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            def properties = new Properties()
            properties.load(new FileInputStream(rootProject.file("local.properties")))

            buildConfigField("String", "API_KEY", "\"${properties.getProperty("x_api_key")}\"")
            buildConfigField("String", "BASE_URL", "\"${properties.getProperty("base_url")}\"")
            buildConfigField("String", "developer", "\"${properties.getProperty("developer")}\"")
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                def properties = new Properties()
                properties.load(new FileInputStream(rootProject.file("local.properties")))
                def formattedDate = new Date().format('yyyy_MM_dd_HH_mm_ss_SSS')
                def developer = properties.getProperty("developer","")
                outputFileName = "IdealApp-i_${applicationId}-v${defaultConfig.versionName}-${variant.buildType.name}-${formattedDate}-${developer}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation project(path: ':core')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //navigation animation
    implementation "com.google.accompanist:accompanist-navigation-animation:0.24.11-rc"

    implementation 'androidx.test:monitor:1.5.0'
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"//commented
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation "com.google.dagger:hilt-android:$hilt_version"


    def room_version = "2.4.3"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"


    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"


    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    // ...with Java.
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"


    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    // ...with Java.
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"

    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"

    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    debugImplementation "androidx.test:core:1.4.0"

    def nav_version = "2.5.1"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    testImplementation 'org.hamcrest:hamcrest:2.2'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    testImplementation "io.mockk:mockk:1.12.7"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.7"

    androidTestImplementation "io.mockk:mockk-android:1.12.7"
    androidTestImplementation "io.mockk:mockk-agent-jvm:1.12.7"

}